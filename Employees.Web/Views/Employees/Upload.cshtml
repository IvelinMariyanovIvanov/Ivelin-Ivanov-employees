@model UploadFileVM

@{
    ViewData["Title"] = "Upload";
}

<h1 class="text-center">Upload Files</h1>

<hr />

<!-- Upload File -->
<div class="row">
    <div class="col-md-8 offset-2">
        <div class="row">
            <div class="col-md-8 offset-2">
                <div class="bg-info">
                    <h2 class="text-center text-white">
                        Upload
                    </h2>
                </div>

                <!-- File -->
                <form asp-action="Upload" enctype="multipart/form-data">
                    <div class="border p-4 mb-4 border-info">
                        <div class="form-group">
                            <label asp-for="File" class="form-label"></label>
                            <input asp-for="File"
                                   accept=".csv" class="form-control" />
                            <span asp-validation-for="File" class="text-danger"></span>
                        </div>

                        <div class="form-group mt-3 text-end">
                            <input class="btn btn-outline-info col-5" type="submit" value="Upload" />
                        </div>

                        <!-- Errors -->
                        @if (Model.Errors.Count > 0)
                        {
                            <div class="mt-2">
                                @foreach (string error in Model.Errors)
                                {
                                    <span class="text-danger mt-1">@error</span>
                                    <br />
                                }
                            </div>
                        }
                    </div>
                </form>
                </>
            </div>
        </div>
    </div>
</div>

<!-- pair of employees who have worked together on common projects -->
@if (Model.MaxEmployeePairs != null && Model.MaxEmployeePairs.Count() > 0)
{
    <div class="mt-5">
        <h2>Employees Table</h2>
    </div>

    <div class="row">
        <table class="table table-bordered table-striped mt-2" width="100%">
            <thead>
                <tr>
                    <th class="col-1 text-center align-middle">
                        <h4>Employee ID 1</h4>
                    </th>
                    <th class="col-1 text-center align-middle">
                        <h4>Employee ID 2</h4>
                    </th>
                    <th class="col-1 text-center align-middle">
                        <h4>Project ID</h4>
                    </th>
                    <th class="col-1 text-center align-middle">
                        <h4>Days worked</h4>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pair in Model.MaxEmployeePairs)
                {
                   foreach (var project in pair.Value)
                    {
                        <tr>
                            <td class="align-middle text-center">
                                @Html.DisplayFor(e => pair.Key.Item1)
                            </td>
                            <td class="align-middle text-center">
                                @Html.DisplayFor(e => pair.Key.Item2)
                            </td>
                            <td class="align-middle text-center">
                                @Html.DisplayFor(e => project.Item1)
                            </td>
                            <td class="align-middle text-center">
                                @Html.DisplayFor(e => project.Item2)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
